name: Build for macOS

# Using instructions from
# https://docs.flutter.dev/deployment/macos#create-a-build-archive-with-codemagic-cli-tools

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'

jobs:
  get-version:
    name: Get version
    runs-on: ubuntu-latest
    outputs:
      buildName: ${{ steps.get_version.outputs.buildName }}
      buildNumber: ${{ steps.get_version.outputs.buildNumber }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: |
          # get buildName from pubspec.yaml (before the +)
          buildName=$(grep -oP '(?<=version: ).*(?=\+)' pubspec.yaml)
          echo "buildName=$buildName" >> $GITHUB_OUTPUT

          # get buildNumber from pubspec.yaml (after the +)
          buildNumber=$(grep -oP '(?<=version: ).*' pubspec.yaml | grep -oP '(?<=\+).*$')
          echo "buildNumber=$buildNumber" >> $GITHUB_OUTPUT

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    needs: get-version
    env:
      APP_STORE_CONNECT_ISSUER_ID: ${{secrets.APP_STORE_CONNECT_ISSUER_ID}}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{secrets.APP_STORE_CONNECT_KEY_IDENTIFIER}}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{secrets.APP_STORE_CONNECT_PRIVATE_KEY}}
      APP_STORE_CERTIFICATE_KEY: ${{secrets.APP_STORE_CERTIFICATE_KEY}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: Install Codemagic CLI Tools
        run: pip3 install codemagic-cli-tools

      - name: Setup keychain
        run: |
          keychain initialize

          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
            --platform MAC_OS \
            --type MAC_APP_STORE \
            --certificate-key=@env:APP_STORE_CERTIFICATE_KEY \
            --create

          app-store-connect list-certificates \
            --type MAC_INSTALLER_DISTRIBUTION \
            --certificate-key=@env:APP_STORE_CERTIFICATE_KEY \
            --save

          keychain add-certificates

          xcode-project use-profiles

      - run: flutter pub get
      - run: find . -name "Podfile" -execdir pod install \;

      - name: Build for macOS
        run: |
          flutter build macos

      - name: Package for App Store
        id: package
        run: |
          APP_NAME="build/macos/Build/Products/Release/SuperNonogram.app"
          PACKAGE_NAME="build/macos/Build/Products/Release/SuperNonogram.pkg"
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT

          xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg

          INSTALLER_CERT_NAME=$(keychain list-certificates \
                  | jq '[.[]
                    | select(.common_name
                    | contains("Mac Developer Installer"))
                    | .common_name][0]' \
                  | xargs)
          xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME"
          rm -f unsigned.pkg

      - name: Compress macOS build
        id: compress
        run: |
          zipName="SuperNonogram_v${{ needs.get-version.outputs.buildName }}.app.zip"
          echo "zipName=$zipName" >> $GITHUB_OUTPUT

          pushd build/macos/Build/Products/Release
          zip -r $zipName SuperNonogram.app
          popd

      - name: Restore keychain
        run: |
          keychain use-login

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: SuperNonogram-macOS-Archive
          path: build/macos/Build/Products/Release/${{ steps.compress.outputs.zipName }}

      - name: Publish to App Store
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: app-store-connect publish --path ${{ steps.package.outputs.PACKAGE_NAME }}
